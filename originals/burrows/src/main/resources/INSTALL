Installing on UNIX:

  This should be simple - just unpack everything and type 'make'.  However,
  depending on your C compiler you might have to hack the Makefile (note
  capitalisation!) a bit.  The following are things I expect to have to
  change:

  CC=	Your C compiler.  I've defaulted this to 'cc', as this is the most
        common name for it (on Linux, for instance, gcc is still installed as
	'cc' as well).

  CFLAGS=  You may have to delete the '-W -Wall' flags (for gcc this turns on
           all warnings), possibly the optimisation '-O' and (unlikely) the
	   debugging flag '-g'.  You might want to alter those last two
	   anyway, of course.  Note that having all warnings on is a Good
           Thing(tm)...

  If you need to do any more than this, please let me know so I can update it.
  My email is mailto:chris@keris.demon.co.uk, that's my main email address.

  The executable is left in the current directory and is called 'starform'.

  Other targets for make are:

  all     build everything (default)
  clean   get rid of all object and executable files
  lint    run lint (if you've got it) on the code

  shar    produce a 'shar' shell archive
  tar     produce a 'tar' archive
  tgz     produce a gzipped (compressed) tar archive
  zip     produce a zip (PKZIP compatible) archive
  rmarc   removes all of the above archives

  These can be combined.  Especially useful is the comnbination 'make clean
  all', which will get rid of the object files and then rebuild everything
  from scratch.  For the archives, obviously you need to have the appropriate
  utilities available:

  shar    available on some (most?) Unix systems, needs the 'sh` shell (or a
          compatible one like GNU bash) to unpack.

  tar     should be available on all Unix systems, and there are DOS ports as
          well (some versions of WinZIP will also unpack it).

  tgz     needs both tar and the GNU gzip utility to pack and unpack (although
          again some versions of WinZIP will unpack it).

  zip     the most common archiver for DOS systems, there is also a free port
          for many systems (PKZIP/PKUNZIP are the originals, the portable
          InfoZip package is at http://www.cdrom.com/pub/infozip/).

  Note that the shar target doesn't work with the GNU/Linux version of shar,
  I've kept the option flags from the original makefile where they presumably
  worked.  If anyone knows what the options should be for 'generic' shar,
  please let me know...

Installing on DOS with DJGPP:

  This should be exactly the same as for Unix, except that it's more likely
  that you'll have to set the CC macro to gcc explicitly.

  The executable will be in the current directory and called 'starform.exe'.
  Depending on which version of DJGPP you have, there may also be a version
  used for debugging called 'starform' (without any extension); if you don't
  want to debug it you can delete this.

Installing on DOS with other compilers:

  The old makefile for Microsoft Quick C ought to work, but I have no way of
  trying it.  For other compilers, try setting the CC macro to your compiler
  (it used to be tcc or bcc for Borland, for instance) and setting the CFAGS
  to the flags your compiler wants.  Again, if you find something that works
  please let me know.

  The executable should be called 'starform.exe'.

Installing for Windows:

  You're kidding, right?  OK, you can do it as described above for DOS, but
  you'll get a normal DOS program without any GUI stuff which you'll have to
  run as a command-line program.  I don't have any Windows development
  facilities...

Chris Croughton, 1999.04.19
mailto:chris@keris.demon.co.uk
